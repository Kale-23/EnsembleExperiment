geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
size_chart <- df_summary_size %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
labs(x = "Plane", y = "Radius(m)") +
geom_line(aes(color = NA, size = 0.6)) +
geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
# facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#   strip.background = element_rect(fill = "#ffffff"),
#   strip.text.x = element_text(size = 14, family="Arial")
# )
size_chart
size_chart <- df_summary_size %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
labs(x = "Plane", y = "Radius(m)") +
geom_line(aes(color = NA, size = 0.6, y = 0)) +
geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
# facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#   strip.background = element_rect(fill = "#ffffff"),
#   strip.text.x = element_text(size = 14, family="Arial")
# )
size_chart
size_chart <- df_summary_size %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
labs(x = "Plane", y = "Radius(m)") +
geom_line(aes(color = NA, size = 0.6, y = 1.1)) +
geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
# facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#   strip.background = element_rect(fill = "#ffffff"),
#   strip.text.x = element_text(size = 14, family="Arial")
# )
size_chart
size_chart <- df_summary_size %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
labs(x = "Plane", y = "Radius(m)") +
geom_line(aes(color = NA, size = 0.6, y = 0.11)) +
geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
# facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#   strip.background = element_rect(fill = "#ffffff"),
#   strip.text.x = element_text(size = 14, family="Arial")
# )
size_chart
ggsave("avgActualVsEstimatedSize.png", width = 8, height = 6)
test <- df_filtered %>%
count(gender)
test
sum(test$n) / 4950
df_filtered %>%
group_by(vision) %>%
mutate(
mean = mean(bias)
)
range(df_filtered$age)
mean(df_filtered$age)
a <- aov(bias ~ plane, data = df_filtered)
summary(a)
plot(a)
t <- TukeyHSD(a)
t
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#knitr::opts_chunk$set(fig.height = 3.75, fig.width = 5)
#knitr::opts_chunk$set(comment = FALSE)
require(tidyverse)
require(knitr)
require(kableExtra)
require(papeR) # signif stars in kables
require(broom) # doesnt give signif stars but papeR doesnt work for hsd
require(lubridate)
require(ggthemes)
require(ggpubr)
require(ggsignif) #signif between years on boxplot
require(data.table)
require(cowplot)
require(viridis)
require(RColorBrewer)
#Get a list with all csv files from the directory that is set as 'working directory'
setwd("~/Desktop/EnsembleExperiment/ParticipantData")
filelist = list.files(pattern="*.csv$")
#read all csv files with data.table::fread() and put in df_input_list
df_input_list <- lapply(filelist, fread)
#get the filenames, remove extension for use as "id"
names(df_input_list) <- gsub(filelist, pattern="\\..*", replacement="")
#Merge all the dataframes and use the filenames as id
df_raw <- bind_rows(df_input_list, .id = "id")
#Filter responses and add bias, error, and plane columns
df_filtered %>%
mutate(
sphereAverageRadius = sphereAverageRadius ( phereDistance / 4.5)
)
df_filtered <- df_filtered %>%
mutate(
sphereAverageRadius = sphereAverageRadius ( phereDistance / 4.5)
)
df_filtered <- df_filtered %>%
mutate(
sphereAverageRadius = sphereAverageRadius * ( phereDistance / 4.5)
)
df_raw$sphereAverageRadius <- df_raw$sphereAverageRadius * (df_raw$sphereDistance / 4.5)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#knitr::opts_chunk$set(fig.height = 3.75, fig.width = 5)
#knitr::opts_chunk$set(comment = FALSE)
require(tidyverse)
require(knitr)
require(kableExtra)
require(papeR) # signif stars in kables
require(broom) # doesnt give signif stars but papeR doesnt work for hsd
require(lubridate)
require(ggthemes)
require(ggpubr)
require(ggsignif) #signif between years on boxplot
require(data.table)
require(cowplot)
require(viridis)
require(RColorBrewer)
#Get a list with all csv files from the directory that is set as 'working directory'
setwd("~/Desktop/EnsembleExperiment/ParticipantData")
filelist = list.files(pattern="*.csv$")
#read all csv files with data.table::fread() and put in df_input_list
df_input_list <- lapply(filelist, fread)
#get the filenames, remove extension for use as "id"
names(df_input_list) <- gsub(filelist, pattern="\\..*", replacement="")
#Merge all the dataframes and use the filenames as id
df_raw <- bind_rows(df_input_list, .id = "id")
#Filter responses and add bias, error, and plane columns
df_raw$sphereAverageRadius <- df_raw$sphereAverageRadius * (df_raw$sphereDistance / 4.5)
df_filtered <- df_raw %>%
filter(probeResponseOverTimeLimit != 1) %>%  #& probeResponseTime < 20) %>%
mutate(
bias = (probeAnswerRadius - sphereAverageRadius / sphereAverageRadius,
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#knitr::opts_chunk$set(fig.height = 3.75, fig.width = 5)
#knitr::opts_chunk$set(comment = FALSE)
require(tidyverse)
require(knitr)
require(kableExtra)
require(papeR) # signif stars in kables
require(broom) # doesnt give signif stars but papeR doesnt work for hsd
require(lubridate)
require(ggthemes)
require(ggpubr)
require(ggsignif) #signif between years on boxplot
require(data.table)
require(cowplot)
require(viridis)
require(RColorBrewer)
#Get a list with all csv files from the directory that is set as 'working directory'
setwd("~/Desktop/EnsembleExperiment/ParticipantData")
filelist = list.files(pattern="*.csv$")
#read all csv files with data.table::fread() and put in df_input_list
df_input_list <- lapply(filelist, fread)
#get the filenames, remove extension for use as "id"
names(df_input_list) <- gsub(filelist, pattern="\\..*", replacement="")
#Merge all the dataframes and use the filenames as id
df_raw <- bind_rows(df_input_list, .id = "id")
#Filter responses and add bias, error, and plane columns
df_raw$sphereAverageRadius <- df_raw$sphereAverageRadius * (df_raw$sphereDistance / 4.5)
df_filtered <- df_raw %>%
filter(probeResponseOverTimeLimit != 1) %>%  #& probeResponseTime < 20) %>%
mutate(
bias = (probeAnswerRadius - sphereAverageRadius) / sphereAverageRadius,
plane = factor(ifelse(sphereDistance == 6, "far", ifelse(sphereDistance == 4.5, "middle", "close"))),
error = probeAnswerRadius - sphereAverageRadius
)
df_filtered <- df_filtered %>%
dplyr::group_by(ID) %>%
filter(bias < (sd(bias) * 3))
write.csv(df_filtered, "participantData.csv")
test <- df_filtered %>%
count(gender)
test
sum(test$n) / 4950
df_filtered %>%
group_by(vision) %>%
mutate(
mean = mean(bias)
)
range(df_filtered$age)
mean(df_filtered$age)
a <- aov(bias ~ plane, data = df_filtered)
summary(a)
plot(a)
t <- TukeyHSD(a)
t
bias_summary <- function(df) {
return(df %>%
dplyr::group_by(plane, depthPass) %>%
dplyr::summarise(
mean = mean(bias),
sd = sd(bias),
n = length(bias),
se = sd / sqrt(n),
ci_high = mean + (0.95 * sd),
ci_low = mean - (0.95 * sd)
)
)
}
error_summary <- function(df) {
return(df %>%
dplyr::group_by(plane) %>%
dplyr::summarise(
mean = mean(error),
sd = sd(error),
n = length(error),
se = sd / sqrt(n),
ci_high = mean + (0.95 * sd),
ci_low = mean - (0.95 * sd)
)
)
}
t_summary <- bias_summary(df_filtered)
df_bias <- left_join(df_filtered, bias_summary(df_filtered), by = c("plane", "depthPass"))
bias_chart <- function(df) {
comp <- list(c("close", "middle"), c("middle", "far"), c("close", "far"))
return(
df %>%
#filter(vision == "none" | vision == "correctiveLenses") %>%
ggplot(aes(x = factor(plane, level=c('close', 'middle', 'far')), y = bias, color = plane)) +
labs(x = "Plane", y = "Bias") +
### This way of doing it is worse ###
#geom_point() +
#geom_jitter(aes(x = plane, y = bias, color = plane, alpha = 0.2), width = 0.15) +
#geom_errorbar(aes(ymin = mean - (0.95 * sd), ymax = mean + (0.95 * sd))) +
#geom_signif(comparisons = list(c("close", "middle")), map_signif_level = TRUE) +
#geom_signif(comparisons = list(c("middle", "far")), map_signif_level = TRUE, margin_top = 0.1) +
#geom_signif(comparisons = list(c("close", "far")), map_signif_level = TRUE, margin_top = 0.17) +
geom_boxplot(lwd = 1) +
geom_hline(yintercept = 0) +
stat_compare_means(comparisons = comp, label = "p.signif", method = "t.test") +
stat_compare_means(method = "anova", label.y = 2)+ # Add global p-value
#ylim(c(-1,2)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background")) +
scale_y_continuous(breaks=c(-1,-0.75,-0.50,-0.25,0,0.25, 0.50,0.75,1,1.25,1.50,1.75,2))
#facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
#theme(
#  strip.background = element_rect(fill = "#ffffff"),
#  strip.text.x = element_text(size = 14, family="Arial")
#)
)
}
c_bias <- bias_chart(df_bias)
c_bias
ggsave("biasByDepth.png", width = 8, height = 6)
bias_trials <- df_bias %>%
ggplot(aes(x = trial, y = bias, color = plane)) +
labs(x = "trial", y = "bias", title = "Bias over Trials") +
geom_point(aes(alpha = 0.05, color = plane)) +
geom_smooth(method = "lm", se = FALSE) +
#theme(legend.position = "none") +
facet_grid(. ~ depthPass)
#error_trials <- df %>%
#  ggplot(aes(x = trial, y = error, color = plane)) +
#  labs(x = "trial", y = "error", title = "Error over Trials") +
#  geom_point(aes(alpha = 0.2)) +
#  geom_smooth(method = "lm")
bias_trials
#by_trial <- ggarrange(bias_trials, error_trials, labels = c("A", "B"), ncol = 2)
#by_trial
df_summary_size <- df_bias %>%
dplyr::group_by(plane) %>% #, depthPass) %>%
dplyr::summarise(smean = mean(sphereAverageRadius),
ssd = sd(sphereAverageRadius),
sn = length(sphereAverageRadius),
sse = ssd / sqrt(sn),
sci_high = smean + (0.95 * ssd),
sci_low = smean - (0.95 * ssd),
pmean = mean(probeAnswerRadius),
psd = sd(probeAnswerRadius),
pn = length(probeAnswerRadius),
pse = psd / sqrt(pn),
pci_high = pmean + (0.95 * psd),
pci_low = pmean - (0.95 * psd)
)
size_chart <- df_summary_size %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
labs(x = "Plane", y = "Radius(m)") +
geom_line(aes(color = NA, size = 0.6, y = 0.11)) +
geom_point(aes(color = "blue", y = smean, size = 0.5)) +
geom_point(aes(x = plane, y = pmean, color = "red", size = 0.5)) +
geom_errorbar(aes(ymin = sci_low, ymax = sci_high, color = "blue", size = 0.5)) +
geom_errorbar(aes(ymin = pci_low, ymax = pci_high, color = "red", size = 0.5)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1", labels = c("Actual Radius", "Probe Radius"), name = "Sphere") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background"))# +
# facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#   strip.background = element_rect(fill = "#ffffff"),
#   strip.text.x = element_text(size = 14, family="Arial")
# )
size_chart
ggsave("avgActualVsEstimatedSize.png", width = 8, height = 6)
size_chart_2 <- df_bias %>%
ggplot(aes(x = factor(plane, level = c("close", "middle", "far")))) +
geom_boxplot(aes(y = sphereAverageRadius, color = "blue"), alpha = 0.25) +
geom_boxplot(aes(y = probeAnswerRadius, color = "red"), alpha = 0.25) +
facet_grid(. ~ depthPass)
size_chart_2
speed_chart <- df_bias %>%
filter(probeResponseTime < 10) %>%
ggplot(aes(x = trial, y = probeResponseTime)) +
labs(x = "trial", y = "Response Time (ms)", title = "Response Time of Participant over Trials") +
geom_point(alpha = 0.1) + #, aes(color = plane)) +
geom_smooth(method = "lm", se = TRUE) +
stat_cor(label.x = 150, label.y = 9) +
stat_regline_equation(label.x = 150, label.y = 8) +
ylim(c(0,10)) +
facet_grid(. ~ depthPass)
speed_chart
rs_dp <- df_bias %>%
#filter(probeResponseTime < 10) %>%
ggplot(aes(x = depthPass, y = probeResponseTime)) +
stat_compare_means(method = "t.test") +
geom_boxplot()
rs_dp
speed_chart <- df_bias %>%
filter(probeResponseTime < 10) %>%
ggplot(aes(x = trial, y = probeResponseTime)) +
labs(x = "trial", y = "Response Time (ms)", title = "Response Time of Participant over Trials") +
geom_point(alpha = 0.1) + #, aes(color = plane)) +
geom_smooth(method = "lm", se = TRUE) +
stat_cor(label.x = 150, label.y = 9) +
stat_regline_equation(label.x = 150, label.y = 8) +
ylim(c(0,10)) +
facet_grid(. ~ depthPass)
speed_chart
rs_dp <- df_bias %>%
#filter(probeResponseTime < 10) %>%
ggplot(aes(x = depthPass, y = probeResponseTime)) +
stat_compare_means(method = "t.test") +
geom_boxplot()
rs_dp
speed_bias_chart <- df_bias %>%
ggplot(aes(x = probeResponseTime, y = bias)) +
geom_point() +
geom_smooth(method = "lm") +
stat_cor(label.x = 8, label.y = 2.2) +
stat_regline_equation(label.x = 8, label.y = 2.05) +
facet_grid(. ~ depthPass)
speed_bias_chart
bias_chart <- function(df) {
comp <- list(c("close", "middle"), c("middle", "far"), c("close", "far"))
return(
df %>%
#filter(vision == "none" | vision == "correctiveLenses") %>%
ggplot(aes(x = factor(plane, level=c('close', 'middle', 'far')), y = bias, color = plane)) +
labs(x = "Plane", y = "Bias") +
### This way of doing it is worse ###
#geom_point() +
#geom_jitter(aes(x = plane, y = bias, color = plane, alpha = 0.2), width = 0.15) +
#geom_errorbar(aes(ymin = mean - (0.95 * sd), ymax = mean + (0.95 * sd))) +
#geom_signif(comparisons = list(c("close", "middle")), map_signif_level = TRUE) +
#geom_signif(comparisons = list(c("middle", "far")), map_signif_level = TRUE, margin_top = 0.1) +
#geom_signif(comparisons = list(c("close", "far")), map_signif_level = TRUE, margin_top = 0.17) +
geom_boxplot(lwd = 1) +
geom_hline(yintercept = 0) +
stat_compare_means(comparisons = comp, label = "p.signif", method = "t.test") +
stat_compare_means(method = "anova", label.y = 2)+ # Add global p-value
#ylim(c(-1,2)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background")) +
scale_y_continuous(breaks=c(-1,-0.75,-0.50,-0.25,0,0.25, 0.50,0.75,1,1.25,1.50,1.75,2)) +
facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
theme(
strip.background = element_rect(fill = "#ffffff"),
strip.text.x = element_text(size = 14, family="Arial")
)
)
}
c_bias <- bias_chart(df_bias)
c_bias
#ggsave("biasByDepth.png", width = 8, height = 6)
bias_chart <- function(df) {
comp <- list(c("close", "middle"), c("middle", "far"), c("close", "far"))
return(
df %>%
#filter(vision == "none" | vision == "correctiveLenses") %>%
ggplot(aes(x = factor(plane, level=c('close', 'middle', 'far')), y = bias, color = plane)) +
labs(x = "Plane", y = "Bias") +
### This way of doing it is worse ###
#geom_point() +
#geom_jitter(aes(x = plane, y = bias, color = plane, alpha = 0.2), width = 0.15) +
#geom_errorbar(aes(ymin = mean - (0.95 * sd), ymax = mean + (0.95 * sd))) +
#geom_signif(comparisons = list(c("close", "middle")), map_signif_level = TRUE) +
#geom_signif(comparisons = list(c("middle", "far")), map_signif_level = TRUE, margin_top = 0.1) +
#geom_signif(comparisons = list(c("close", "far")), map_signif_level = TRUE, margin_top = 0.17) +
geom_boxplot(lwd = 1) +
geom_hline(yintercept = 0) +
stat_compare_means(comparisons = comp, label = "p.signif", method = "t.test") +
#stat_compare_means(method = "anova", label.y = 2)+ # Add global p-value
#ylim(c(-1,2)) +
theme_cowplot() +
theme(
legend.position = "none",
#plot.title=element_text(size=20, vjust=2, family="Arial"),
axis.title.x=element_text(size=18, family="Arial"),
axis.title.y=element_text(size=18, family="Arial"),
axis.line = element_line(colour = "black", size = 1, linetype = "solid"),
axis.text = element_text(size = 12)
) +
scale_color_brewer(palette = "Set1") +
scale_x_discrete(labels=c("close" = "foreground", "middle" = "middleground", "far" = "background")) +
scale_y_continuous(breaks=c(-1,-0.75,-0.50,-0.25,0,0.25, 0.50,0.75,1,1.25,1.50,1.75,2))# +
#facet_grid(. ~ factor(depthPass, levels=c(TRUE, FALSE), labels = c("Passed Depth Test", "Failed Depth Test"))) +
# theme(
#  strip.background = element_rect(fill = "#ffffff"),
#  strip.text.x = element_text(size = 14, family="Arial")
#)
)
}
c_bias <- bias_chart(df_bias)
c_bias
#ggsave("biasByDepth.png", width = 8, height = 6)
ggsave("biasByDepth.png", width = 8, height = 6)
